{
	"info": {
		"_postman_id": "974d6a93-c144-476f-bf1c-d8c4dbba572e",
		"name": "FCCAssignments",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "27974431"
	},
	"item": [
		{
			"name": "Get Status of API",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status to be OK and 200\",function(){\r",
							"    pm.response.to.have.status(\"OK\");\r",
							"});\r",
							"\r",
							"var response = pm.response.json();\r",
							"\r",
							"console.log(response.status) ;\r",
							"\r",
							"//var ok=\"OK\";\r",
							"pm.test(\"Checking the Response\", function(){\r",
							"    pm.expect(response.status).be.eql(\"OK\")\r",
							"});\r",
							"\r",
							"postman.setNextRequest(\"ListBooks\");"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{BooksURL}}/status",
					"host": [
						"{{BooksURL}}"
					],
					"path": [
						"status"
					]
				}
			},
			"response": []
		},
		{
			"name": "API Client Registration",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status Message is Created\", function () {\r",
							"    pm.response.to.have.status(\"Created\");\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"clientName\": \"Postman1\",\r\n    \"clientEmail\": \"gok23@example.com\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{BooksURL}}/api-clients",
					"host": [
						"{{BooksURL}}"
					],
					"path": [
						"api-clients"
					]
				}
			},
			"response": []
		},
		{
			"name": "ListBooks",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code to be 200\", function(){\r",
							"    pm.response.to.have.status(200);\r",
							"    \r",
							"});\r",
							"\r",
							"const response=pm.response.json();\r",
							"\r",
							"/*const nonfiction=response.filter((book) => book.available===true);\r",
							"console.log (nonfiction[0])   //alternate way to find the available book\r",
							"*/\r",
							"const nF=response.filter(\r",
							"    function(book){\r",
							"    return (book.available===true && book.type===\"non-fiction\");\r",
							"});\r",
							"console.log (nF[0]) \r",
							"\r",
							"const book=nF[0];\r",
							"pm.test(\"Non-Fiction Book Found\", function(){\r",
							"    pm.expect(book.type).to.equals(\"non-fiction\")\r",
							"});\r",
							"\r",
							"var len=response.length;\r",
							"console.log(len)\r",
							"for(var i=0;i<len;++i)\r",
							"{\r",
							"    if(response[i].available === true && response[i].type ===\"non-fiction\")\r",
							"    {\r",
							"        pm.globals.set(\"BookId\",response[i].id);\r",
							"    }\r",
							"}"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{BooksURL}}/books",
					"host": [
						"{{BooksURL}}"
					],
					"path": [
						"books"
					],
					"query": [
						{
							"key": "limit",
							"value": "4",
							"disabled": true
						},
						{
							"key": "type",
							"value": "non-fiction",
							"disabled": true
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "SingleBook",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status Code check\",function(){\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"var response=pm.response.json();\r",
							"var stock=response['current-stock'];\r",
							"console.log(stock);\r",
							"\r",
							"pm.test(\"Book is in Stock\",function(){\r",
							"    pm.expect(response['current-stock']).to.be.greaterThan(0);\r",
							"})"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{BooksURL}}/books/:bookId",
					"host": [
						"{{BooksURL}}"
					],
					"path": [
						"books",
						":bookId"
					],
					"variable": [
						{
							"key": "bookId",
							"value": "{{BookId}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Order Books",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 201\", function () {\r",
							"    pm.response.to.have.status(201);\r",
							"});\r",
							"\r",
							"var response=pm.response.json();\r",
							"\r",
							"pm.globals.set(\"OrderId\", response.orderId);"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"var bId=pm.globals.get(\"BookId\");\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{accessToken}}",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"bookId\": {{BookId}},\r\n    \"customerName\": \"{{$randomFullName}}\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{BooksURL}}/orders",
					"host": [
						"{{BooksURL}}"
					],
					"path": [
						"orders"
					]
				}
			},
			"response": []
		},
		{
			"name": "Order Books of No Stock",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status Code 201 and Created\",function(){\r",
							"    pm.response.to.have.status(404)\r",
							"    pm.response.to.have.status(\"Not Found\");\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{accessToken}}",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"bookId\":2,\r\n    \"customerName\": \"{{$randomUserName}}\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{BooksURL}}/orders",
					"host": [
						"{{BooksURL}}"
					],
					"path": [
						"orders"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get All Orders",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"var response=pm.response.json();\r",
							"pm.test(\"Check Cutomer Name in Details\",function(){\r",
							"    pm.expect(response[0].customerName).includes(\"Gokul\")\r",
							"})"
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{accessToken}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{BooksURL}}/orders",
					"host": [
						"{{BooksURL}}"
					],
					"path": [
						"orders"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get Specific Orders",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var orderId=pm.globals.get(\"OrderId\");\r",
							"console.log(orderId);\r",
							"\r",
							"pm.test(\"Body matches string\", function () {\r",
							"    pm.expect(pm.response.text()).to.include(orderId);\r",
							"});\r",
							"\r",
							"pm.test(\"Status code Okay\",function(){\r",
							"    pm.response.to.have.status(200);\r",
							"})"
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{accessToken}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{BooksURL}}/orders/:orderId",
					"host": [
						"{{BooksURL}}"
					],
					"path": [
						"orders",
						":orderId"
					],
					"variable": [
						{
							"key": "orderId",
							"value": "{{OrderId}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Update an Order",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 204\", function () {\r",
							"    pm.response.to.have.status(204);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{accessToken}}",
							"type": "string"
						}
					]
				},
				"method": "PATCH",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"customerName\": \"Gokul {{$randomLastName}}\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{BooksURL}}/orders/:orderId",
					"host": [
						"{{BooksURL}}"
					],
					"path": [
						"orders",
						":orderId"
					],
					"variable": [
						{
							"key": "orderId",
							"value": "{{OrderId}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Delete an Order",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"No Content\",function(){\r",
							"    pm.response.to.have.status(\"No Content\");\r",
							"});\r",
							"\r",
							"postman.setNextRequest(null)"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{accessToken}}",
							"type": "string"
						}
					]
				},
				"method": "DELETE",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{BooksURL}}/orders/:orderId",
					"host": [
						"{{BooksURL}}"
					],
					"path": [
						"orders",
						":orderId"
					],
					"variable": [
						{
							"key": "orderId",
							"value": "{{OrderId}}"
						}
					]
				}
			},
			"response": []
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "BooksURL",
			"value": "https://simple-books-api.glitch.me"
		},
		{
			"key": "accessToken",
			"value": "c7243018477a10dfae3fc0f7eca090020d4091971e39ace699c1d9e20758bfbb",
			"type": "string"
		}
	]
}